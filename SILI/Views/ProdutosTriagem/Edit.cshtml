@model SILI.ProdutoTriagem
@using SILI.Models

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Produto Triagem</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.EANCNP)
        @Html.HiddenFor(model => model.TriagemID)

        <div class="form-group">
            @Html.LabelFor(model => model.EANCNP, "EAN", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("EANCNP", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.AutocompleteFor(model => model.Produto.FormattedToString, model => model.EANCNP, "GetProdutos", "ProdutosTriagem", false, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EANCNP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QtdDevolvida, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QtdDevolvida, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QtdDevolvida, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lote, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lote, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lote, "", new { @class = "text-danger" })
                @if (ViewBag.CreateLote)
                {
                    <div>
                        @Html.ActionLink("Criar Lote", "Create", "LoteProdutos", new { ProdutoId = ViewBag.EANCNP }, new { target = "_blank"})
                    </div>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PVP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PVP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PVP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MotivoDevolucaoID, "Motivo Devolução", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MotivoDevolucaoID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MotivoDevolucaoID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TratamentoID, "Tratamento", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TratamentoID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TratamentoID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Localizacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Localizacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Localizacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Validade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Validade, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipologiaID, "Tipologia", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("TipologiaID", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })*@
                @Html.EditorFor(model => model.Tipologia.Descricao, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.TipologiaID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodSecundario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodSecundario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CodSecundario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacoes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacoes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observacoes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*<input type="submit" name="Save" value="Save" class="btn btn-default" />*@
                <input type="submit" name="New" value="Inserir Novo Produto" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to Triagem", "Edit","Triagens", new { id = Model.TriagemID }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}